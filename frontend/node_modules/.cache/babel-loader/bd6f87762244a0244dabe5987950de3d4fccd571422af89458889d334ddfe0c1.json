{"ast":null,"code":"import { createPost as apiCreatePost } from '../services/api';\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      message: ''\n    };\n  },\n  methods: {\n    createPost() {\n      const token = localStorage.getItem('jwtToken'); // Obține token-ul\n\n      const post = {\n        title: this.title,\n        content: this.content,\n        status: PENDING\n      };\n      apiCreatePost(post, token).then(response => {\n        console.log(\"Postare creată:\", response.data);\n        this.message = \"Postare creată cu succes!\";\n      }).catch(error => {\n        console.error(\"Eroare la crearea postării\", error);\n        this.message = \"Eroare la crearea postării.\";\n      });\n    }\n  }\n};","map":{"version":3,"names":["createPost","apiCreatePost","data","title","content","message","methods","token","localStorage","getItem","post","status","PENDING","then","response","console","log","catch","error"],"sources":["C:\\Users\\Elena\\Desktop\\an4\\sem1\\SCD\\Proiect\\frontend\\src\\components\\PostForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Creează o Postare</h2>\r\n    <form @submit.prevent=\"createPost\">\r\n      <div>\r\n        <label for=\"title\">Titlu</label>\r\n        <input type=\"text\" v-model=\"title\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"content\">Conținut</label>\r\n        <textarea v-model=\"content\" required></textarea>\r\n      </div>\r\n      <button type=\"submit\">Creează Postarea</button>\r\n    </form>\r\n    <p v-if=\"message\">{{ message }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { createPost as apiCreatePost } from '../services/api';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      title: '',\r\n      content: '',\r\n      message: ''\r\n    };\r\n  },\r\n  methods: {\r\n    createPost() {\r\n      const token = localStorage.getItem('jwtToken'); // Obține token-ul\r\n\r\n      const post = {\r\n        title: this.title,\r\n        content: this.content,\r\n        status: PENDING\r\n      };\r\n\r\n      apiCreatePost(post, token)\r\n        .then(response => {\r\n          console.log(\"Postare creată:\", response.data);\r\n          this.message = \"Postare creată cu succes!\";\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Eroare la crearea postării\", error);\r\n          this.message = \"Eroare la crearea postării.\";\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Stil pentru formularul de creare a postării */\r\n</style>\r\n"],"mappings":"AAmBA,SAASA,UAAS,IAAKC,aAAY,QAAS,iBAAiB;AAE7D,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPN,UAAUA,CAAA,EAAG;MACX,MAAMO,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;;MAEhD,MAAMC,IAAG,GAAI;QACXP,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBO,MAAM,EAAEC;MACV,CAAC;MAEDX,aAAa,CAACS,IAAI,EAAEH,KAAK,EACtBM,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAACZ,IAAI,CAAC;QAC7C,IAAI,CAACG,OAAM,GAAI,2BAA2B;MAC5C,CAAC,EACAY,KAAK,CAACC,KAAI,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,IAAI,CAACb,OAAM,GAAI,6BAA6B;MAC9C,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}