{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, comment => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: comment.id\n    }, _toDisplayString(comment.content), 1);\n  }), 128))]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newCommentContent = $event),\n    placeholder: \"Add a comment\"\n  }, null, 512), [[_vModelText, $data.newCommentContent]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addComment && $options.addComment(...args))\n  }, \"Add Comment\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","comments","comment","key","id","content","_cache","$event","newCommentContent","placeholder","onClick","args","$options","addComment"],"sources":["C:\\Users\\Elena\\Desktop\\an4\\sem1\\SCD\\Proiect\\frontend\\src\\components\\CommentSection.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <ul>\r\n        <li v-for=\"comment in comments\" :key=\"comment.id\">{{ comment.content }}</li>\r\n      </ul>\r\n      <textarea v-model=\"newCommentContent\" placeholder=\"Add a comment\"></textarea>\r\n      <button @click=\"addComment\">Add Comment</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    props: ['postId'],\r\n    data() {\r\n      return {\r\n        comments: [],\r\n        newCommentContent: ''\r\n      };\r\n    },\r\n    methods: {\r\n      fetchComments() {\r\n        axios.get(`/api/posts/${this.postId}/comments`).then(response => {\r\n          this.comments = response.data;\r\n        });\r\n      },\r\n      addComment() {\r\n        axios.post(`/api/comments`, {\r\n          post_id: this.postId,\r\n          content: this.newCommentContent,\r\n          user_id: 1 // Hardcoded for simplicity, change as needed\r\n        }).then(() => {\r\n          this.fetchComments();\r\n          this.newCommentContent = '';\r\n        });\r\n      }\r\n    },\r\n    mounted() {\r\n      this.fetchComments();\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";;uBACIA,mBAAA,CAMM,cALJC,mBAAA,CAEK,c,kBADHD,mBAAA,CAA4EE,SAAA,QAHpFC,WAAA,CAG8BC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBN,mBAAA,CAA4E;MAA3CO,GAAG,EAAED,OAAO,CAACE;wBAAOF,OAAO,CAACG,OAAO;+BAEtER,mBAAA,CAA6E;IALnF,uBAAAS,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKyBP,KAAA,CAAAQ,iBAAiB,GAAAD,MAAA;IAAEE,WAAW,EAAC;gCAA/BT,KAAA,CAAAQ,iBAAiB,E,GACpCX,mBAAA,CAAgD;IAAvCa,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,aAAW,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}