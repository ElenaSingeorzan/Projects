{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { loginUser as apiLoginUser } from '../services/api';\nimport getUserInfo from '../services/info';\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      message: ''\n    };\n  },\n  methods: {\n    loginUser() {\n      const login = {\n        email: this.email,\n        password: this.password\n      };\n      apiLoginUser(login).then(response => {\n        console.log(\"Autentificare reusita\", response.data);\n        // Salvează token-ul în localStorage\n        localStorage.setItem('jwtToken', response.data);\n        //getUserInfo()\n        // localStorage.setItem(\"userId\", userId); \n        this.message = \"Autentificare reușită!\";\n        this.$router.push('/');\n        // Redirecționează utilizatorul sau fă alte acțiuni\n      }).catch(error => {\n        console.error(\"Eroare la autentificare\", error);\n        this.message = \"Autentificare eșuată! Verifică email-ul și parola.\";\n      });\n    }\n  }\n};","map":{"version":3,"names":["loginUser","apiLoginUser","getUserInfo","data","email","password","message","methods","login","then","response","console","log","localStorage","setItem","$router","push","catch","error"],"sources":["C:\\Users\\Elena\\Desktop\\an4\\sem1\\SCD\\Proiect\\frontend\\src\\components\\UserLogin.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Login</h2>\r\n    <form @submit.prevent=\"loginUser\">\r\n      <div>\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" v-model=\"email\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" v-model=\"password\" required />\r\n      </div>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n    <p v-if=\"message\">{{ message }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { loginUser as apiLoginUser } from '../services/api';\r\nimport getUserInfo from '../services/info';\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      message: ''\r\n    };\r\n  },\r\n  methods: {\r\n    loginUser() {\r\n      const login = {\r\n        email: this.email,\r\n        password: this.password\r\n      };\r\n      apiLoginUser(login)\r\n        .then(response => {\r\n          console.log(\"Autentificare reusita\", response.data);\r\n          // Salvează token-ul în localStorage\r\n          localStorage.setItem('jwtToken', response.data);\r\n          //getUserInfo()\r\n         // localStorage.setItem(\"userId\", userId); \r\n          this.message = \"Autentificare reușită!\";\r\n          this.$router.push('/');\r\n          // Redirecționează utilizatorul sau fă alte acțiuni\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Eroare la autentificare\", error);\r\n          this.message = \"Autentificare eșuată! Verifică email-ul și parola.\";\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Stil pentru formularul de logare */\r\n</style>\r\n"],"mappings":";AAmBA,SAASA,SAAQ,IAAKC,YAAW,QAAS,iBAAiB;AAC3D,OAAOC,WAAU,MAAO,kBAAkB;AAC1C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPP,SAASA,CAAA,EAAG;MACV,MAAMQ,KAAI,GAAI;QACZJ,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MACDJ,YAAY,CAACO,KAAK,EACfC,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,QAAQ,CAACP,IAAI,CAAC;QACnD;QACAU,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEJ,QAAQ,CAACP,IAAI,CAAC;QAC/C;QACD;QACC,IAAI,CAACG,OAAM,GAAI,wBAAwB;QACvC,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACtB;MACF,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdP,OAAO,CAACO,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,IAAI,CAACZ,OAAM,GAAI,oDAAoD;MACrE,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}