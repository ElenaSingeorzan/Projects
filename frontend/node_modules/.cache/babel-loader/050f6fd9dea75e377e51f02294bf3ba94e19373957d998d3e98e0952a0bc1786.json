{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post-card\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.isEditing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editedTitle = $event),\n    placeholder: \"Title\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedTitle]]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.editedContent = $event),\n    placeholder: \"Content\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedContent]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.saveEdit && $options.saveEdit(...args))\n  }, \"Save\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.cancelEdit && $options.cancelEdit(...args))\n  }, \"Cancel\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h2\", null, _toDisplayString($props.post.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($props.post.content), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.startEdit && $options.startEdit(...args))\n  }, \"Edit\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.removePost && $options.removePost(...args))\n  }, \"Delete\")]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","isEditing","_hoisted_2","_createElementVNode","_cache","$event","editedTitle","placeholder","editedContent","onClick","args","$options","saveEdit","cancelEdit","_hoisted_3","_toDisplayString","$props","post","title","content","startEdit","removePost"],"sources":["C:\\Users\\Elena\\Desktop\\an4\\sem1\\SCD\\Proiect\\frontend\\src\\components\\PostCard.vue"],"sourcesContent":["<template>\r\n    <div class=\"post-card\">\r\n      <div v-if=\"isEditing\">\r\n        <input v-model=\"editedTitle\" placeholder=\"Title\" />\r\n        <textarea v-model=\"editedContent\" placeholder=\"Content\"></textarea>\r\n        <button @click=\"saveEdit\">Save</button>\r\n        <button @click=\"cancelEdit\">Cancel</button>\r\n      </div>\r\n      <div v-else>\r\n        <h2>{{ post.title }}</h2>\r\n        <p>{{ post.content }}</p>\r\n        <button @click=\"startEdit\">Edit</button>\r\n        <button @click=\"removePost\">Delete</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    props: {\r\n      post: Object, // Postarea primită din lista\r\n    },\r\n    data() {\r\n      return {\r\n        isEditing: false,\r\n        editedTitle: \"\",\r\n        editedContent: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n      startEdit() {\r\n        this.isEditing = true;\r\n        this.editedTitle = this.post.title;\r\n        this.editedContent = this.post.content;\r\n      },\r\n      cancelEdit() {\r\n        this.isEditing = false;\r\n      },\r\n      saveEdit() {\r\n        if (this.editedTitle.trim() && this.editedContent.trim()) {\r\n          const updatedPost = {\r\n            id: this.post.id,\r\n            title: this.editedTitle,\r\n            content: this.editedContent,\r\n          };\r\n          this.$emit(\"update-post\", updatedPost); // Notifică PostList\r\n          this.isEditing = false;\r\n        } else {\r\n          alert(\"Title and content cannot be empty!\");\r\n        }\r\n      },\r\n      removePost() {\r\n        this.$emit(\"remove-post\", this.post.id); // Notifică PostList\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAW;;EAD1BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAaM,OAbNC,UAaM,GAZOC,KAAA,CAAAC,SAAS,I,cAApBH,mBAAA,CAKM,OAPZI,UAAA,G,gBAGQC,mBAAA,CAAmD;IAH3D,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGwBL,KAAA,CAAAM,WAAW,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAzBP,KAAA,CAAAM,WAAW,E,mBAC3BH,mBAAA,CAAmE;IAJ3E,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAI2BL,KAAA,CAAAQ,aAAa,GAAAH,MAAA;IAAEE,WAAW,EAAC;iDAA3BP,KAAA,CAAAQ,aAAa,E,GAChCL,mBAAA,CAAuC;IAA9BM,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KAAE,MAAI,GAC9BP,mBAAA,CAA2C;IAAlCM,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAE,UAAA,IAAAF,QAAA,CAAAE,UAAA,IAAAH,IAAA,CAAU;KAAE,QAAM,E,oBAEpCZ,mBAAA,CAKM,OAbZgB,UAAA,GASQX,mBAAA,CAAyB,YAAAY,gBAAA,CAAlBC,MAAA,CAAAC,IAAI,CAACC,KAAK,kBACjBf,mBAAA,CAAyB,WAAAY,gBAAA,CAAnBC,MAAA,CAAAC,IAAI,CAACE,OAAO,kBAClBhB,mBAAA,CAAwC;IAA/BM,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAS,SAAA,IAAAT,QAAA,CAAAS,SAAA,IAAAV,IAAA,CAAS;KAAE,MAAI,GAC/BP,mBAAA,CAA2C;IAAlCM,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAU,UAAA,IAAAV,QAAA,CAAAU,UAAA,IAAAX,IAAA,CAAU;KAAE,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}