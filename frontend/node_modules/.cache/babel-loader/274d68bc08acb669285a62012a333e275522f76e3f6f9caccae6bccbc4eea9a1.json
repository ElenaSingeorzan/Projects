{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Postări\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: post.id\n    }, [_createVNode(_component_router_link, {\n      to: '/posts/' + post.id\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(post.title), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","posts","post","key","id","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_toDisplayString","title","_"],"sources":["C:\\Users\\Elena\\Desktop\\an4\\sem1\\SCD\\Proiect\\frontend\\src\\components\\PostList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Postări</h1>\r\n    <ul>\r\n      <li v-for=\"post in posts\" :key=\"post.id\">\r\n        <router-link :to=\"'/posts/' + post.id\">{{ post.title }}</router-link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getPosts } from '../services/api'; // Importăm funcția de la API\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      posts: []\r\n    };\r\n  },\r\n  mounted() {\r\n    // Facem request pentru a prelua postările din backend\r\n    getPosts()\r\n      .then(response => {\r\n        this.posts = response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Eroare la încărcarea postărilor:\", error);\r\n      });\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;;uBACEA,mBAAA,CAOM,c,0BANJC,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKE,SAAA,QANXC,WAAA,CAIyBC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfN,mBAAA,CAEK;MAFsBO,GAAG,EAAED,IAAI,CAACE;QACnCC,YAAA,CAAqEC,sBAAA;MAAvDC,EAAE,cAAcL,IAAI,CAACE;;MAL3CI,OAAA,EAAAC,QAAA,CAK+C,MAAgB,CAL/DC,gBAAA,CAAAC,gBAAA,CAKkDT,IAAI,CAACU,KAAK,iB;MAL5DC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}