{"ast":null,"code":"import { getPosts } from '../services/api'; // Importă funcția specifică\n\nexport default {\n  data() {\n    return {\n      posts: []\n    };\n  },\n  methods: {\n    //   fetchPosts() {\n    //     getPosts()\n    //       .then(response => {\n    //         this.posts = response.data;\n    //       })\n    //       .catch(error => {\n    //         console.error('Eroare la preluarea postărilor:', error);\n    //       });\n    //   }\n    // },\n    // mounted() {\n    //   this.fetchPosts();\n    fetchPosts() {\n      const token = localStorage.getItem('jwtToken'); // Obține token-ul din localStorage\n\n      if (token) {\n        getPosts(token) // Trimite token-ul în cerere\n        .then(response => {\n          this.posts = response.data; // Setează postările obținute\n        }).catch(error => {\n          console.error('Eroare la preluarea postărilor:', error);\n        });\n      } else {\n        console.error('Token-ul nu este disponibil');\n      }\n    }\n  },\n  mounted() {\n    this.fetchPosts(); // Apelează fetchPosts atunci când componenta este montată\n  }\n};","map":{"version":3,"names":["getPosts","data","posts","methods","fetchPosts","token","localStorage","getItem","then","response","catch","error","console","mounted"],"sources":["C:\\Users\\Elena\\Desktop\\an4\\sem1\\SCD\\Proiect\\frontend\\src\\components\\PostList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Lista Postări</h1>\r\n    <ul>\r\n      <li v-for=\"post in posts\" :key=\"post.id\">{{ post.title }}</li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getPosts } from '../services/api'; // Importă funcția specifică\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      posts: [],\r\n    };\r\n  },\r\n  methods: {\r\n  //   fetchPosts() {\r\n  //     getPosts()\r\n  //       .then(response => {\r\n  //         this.posts = response.data;\r\n  //       })\r\n  //       .catch(error => {\r\n  //         console.error('Eroare la preluarea postărilor:', error);\r\n  //       });\r\n  //   }\r\n  // },\r\n  // mounted() {\r\n  //   this.fetchPosts();\r\n  fetchPosts() {\r\n      const token = localStorage.getItem('jwtToken'); // Obține token-ul din localStorage\r\n\r\n      if (token) {\r\n        getPosts(token) // Trimite token-ul în cerere\r\n          .then(response => {\r\n            this.posts = response.data; // Setează postările obținute\r\n          })\r\n          .catch(error => {\r\n            console.error('Eroare la preluarea postărilor:', error);\r\n          });\r\n      } else {\r\n        console.error('Token-ul nu este disponibil');\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchPosts(); // Apelează fetchPosts atunci când componenta este montată\r\n  }\r\n  }\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Stilurile pentru component */\r\n</style>\r\n"],"mappings":"AAUA,SAASA,QAAO,QAAS,iBAAiB,EAAE;;AAE5C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,UAAUA,CAAA,EAAG;MACT,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;;MAEhD,IAAIF,KAAK,EAAE;QACTL,QAAQ,CAACK,KAAK,EAAE;QAAA,CACbG,IAAI,CAACC,QAAO,IAAK;UAChB,IAAI,CAACP,KAAI,GAAIO,QAAQ,CAACR,IAAI,EAAE;QAC9B,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;UACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACzD,CAAC,CAAC;MACN,OAAO;QACLC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;MAC9C;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,UAAU,CAAC,CAAC,EAAE;EACrB;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}