{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"Creează o Postare\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.createPost && $options.createPost(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"title\"\n  }, \"Titlu\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"content\"\n  }, \"Conținut\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.content = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.content]])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Creează Postarea\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $data.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString($data.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","createPost","for","type","$event","$data","title","required","content","message","_hoisted_1","_toDisplayString","_createCommentVNode"],"sources":["C:\\Users\\Elena\\Desktop\\an4\\sem1\\SCD\\Proiect\\frontend\\src\\components\\PostForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Creează o Postare</h2>\r\n    <form @submit.prevent=\"createPost\">\r\n      <div>\r\n        <label for=\"title\">Titlu</label>\r\n        <input type=\"text\" v-model=\"title\" required />\r\n      </div>\r\n      <div>\r\n        <label for=\"content\">Conținut</label>\r\n        <textarea v-model=\"content\" required></textarea>\r\n      </div>\r\n      <button type=\"submit\">Creează Postarea</button>\r\n    </form>\r\n    <p v-if=\"message\">{{ message }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { createPost as apiCreatePost } from '../services/api';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      title: '',\r\n      content: '',\r\n      message: ''\r\n    };\r\n  },\r\n  methods: {\r\n    createPost() {\r\n      const token = localStorage.getItem('jwtToken'); // Obține token-ul\r\n\r\n      const post = {\r\n        title: this.title,\r\n        content: this.content,\r\n        status: PENDING\r\n      };\r\n\r\n      apiCreatePost(post, token)\r\n        .then(response => {\r\n          console.log(\"Postare creată:\", response.data);\r\n          this.message = \"Postare creată cu succes!\";\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Eroare la crearea postării\", error);\r\n          this.message = \"Eroare la crearea postării.\";\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Stil pentru formularul de creare a postării */\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAcM,c,0BAbJC,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAUO;IAVAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BJ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAgC;IAAzBO,GAAG,EAAC;EAAO,GAAC,OAAK,sB,gBACxBP,mBAAA,CAA8C;IAAvCQ,IAAI,EAAC,MAAM;IAN1B,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAMoCC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,QAAQ,EAAR;iDAAPF,KAAA,CAAAC,KAAK,E,KAEnCX,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAqC;IAA9BO,GAAG,EAAC;EAAS,GAAC,UAAQ,sB,gBAC7BP,mBAAA,CAAgD;IAVxD,uBAAAE,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAU2BC,KAAA,CAAAG,OAAO,GAAAJ,MAAA;IAAEG,QAAQ,EAAR;iDAATF,KAAA,CAAAG,OAAO,E,+BAE5Bb,mBAAA,CAA+C;IAAvCQ,IAAI,EAAC;EAAQ,GAAC,kBAAgB,qB,4BAE/BE,KAAA,CAAAI,OAAO,I,cAAhBf,mBAAA,CAAmC,KAdvCgB,UAAA,EAAAC,gBAAA,CAcyBN,KAAA,CAAAI,OAAO,oBAdhCG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}