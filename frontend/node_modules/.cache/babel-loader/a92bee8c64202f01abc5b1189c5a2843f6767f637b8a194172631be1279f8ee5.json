{"ast":null,"code":"import PostItem from './PostItem.vue';\nimport { getPosts, updatePost, deletePost, addComment } from '../services/api'; // Importă funcția specifică\n\nexport default {\n  components: {\n    PostItem\n  },\n  data() {\n    return {\n      posts: [],\n      message: ''\n    };\n  },\n  methods: {\n    fetchPosts() {\n      const token = localStorage.getItem('jwtToken'); // Obține token-ul din localStorage\n\n      getPosts(token).then(response => {\n        this.posts = response.data;\n      }).catch(error => {\n        console.error('Eroare la preluarea postărilor:', error);\n      });\n    },\n    handleUpdatePost(post) {\n      // Apelează funcția API de actualizare\n      updatePost(post.id, post).then(() => {\n        alert('Postare actualizată!');\n        this.fetchPosts();\n      }).catch(error => {\n        console.error('Eroare la actualizarea postării:', error);\n      });\n    },\n    handleRemovePost(postId) {\n      // Apelează funcția API de ștergere\n      deletePost(postId).then(() => {\n        alert('Postare ștearsă!');\n        this.fetchPosts();\n      }).catch(error => {\n        console.error('Eroare la ștergerea postării:', error);\n      });\n    },\n    handleAddComment(postId, comment) {\n      // Apelează funcția API de adăugare comentariu\n      addComment(postId, comment).then(() => {\n        alert('Comentariu adăugat!');\n        this.fetchPosts();\n      }).catch(error => {\n        console.error('Eroare la adăugarea comentariului:', error);\n      });\n    }\n  },\n  mounted() {\n    this.fetchPosts();\n  }\n};","map":{"version":3,"names":["PostItem","getPosts","updatePost","deletePost","addComment","components","data","posts","message","methods","fetchPosts","token","localStorage","getItem","then","response","catch","error","console","handleUpdatePost","post","id","alert","handleRemovePost","postId","handleAddComment","comment","mounted"],"sources":["C:\\Users\\Elena\\Desktop\\an4\\sem1\\SCD\\Proiect\\frontend\\src\\components\\PostList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Lista Postări</h1>\r\n    <div v-for=\"post in posts\" :key=\"post.id\">\r\n      <PostItem\r\n        :post=\"post\"\r\n        @update-post=\"handleUpdatePost\"\r\n        @remove-post=\"handleRemovePost\"\r\n        @add-comment=\"handleAddComment\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PostItem from './PostItem.vue';\r\nimport { getPosts, updatePost, deletePost, addComment } from '../services/api'; // Importă funcția specifică\r\n\r\nexport default {\r\n  components: {\r\n    PostItem\r\n  },\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      message: '',\r\n    };\r\n  },\r\n  methods: {\r\n  fetchPosts() {\r\n      const token = localStorage.getItem('jwtToken'); // Obține token-ul din localStorage\r\n\r\n      getPosts(token)\r\n        .then(response => {\r\n          this.posts = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Eroare la preluarea postărilor:', error);\r\n        });\r\n    },\r\n    handleUpdatePost(post) {\r\n      // Apelează funcția API de actualizare\r\n      updatePost(post.id, post)\r\n        .then(() => {\r\n          alert('Postare actualizată!');\r\n          this.fetchPosts();\r\n        })\r\n        .catch(error => {\r\n          console.error('Eroare la actualizarea postării:', error);\r\n        });\r\n    },\r\n    handleRemovePost(postId) {\r\n      // Apelează funcția API de ștergere\r\n      deletePost(postId)\r\n        .then(() => {\r\n          alert('Postare ștearsă!');\r\n          this.fetchPosts();\r\n        })\r\n        .catch(error => {\r\n          console.error('Eroare la ștergerea postării:', error);\r\n        });\r\n    },\r\n    handleAddComment(postId, comment) {\r\n      // Apelează funcția API de adăugare comentariu\r\n      addComment(postId, comment)\r\n        .then(() => {\r\n          alert('Comentariu adăugat!');\r\n          this.fetchPosts();\r\n        })\r\n        .catch(error => {\r\n          console.error('Eroare la adăugarea comentariului:', error);\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchPosts();\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Stiluri pentru a arăta postările și detaliile acestora */\r\n.post {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nh3 {\r\n  cursor: pointer;\r\n  color: #007BFF;\r\n}\r\n\r\nh3:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding-left: 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 10px;\r\n}\r\n\r\nsmall {\r\n  font-size: 0.9em;\r\n  color: gray;\r\n}\r\n\r\np {\r\n  font-size: 1.1em;\r\n}\r\n\r\nh4 {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAeA,OAAOA,QAAO,MAAO,gBAAgB;AACrC,SAASC,QAAQ,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAS,QAAS,iBAAiB,EAAE;;AAEhF,eAAe;EACbC,UAAU,EAAE;IACVL;EACF,CAAC;EACDM,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACTC,UAAUA,CAAA,EAAG;MACT,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;;MAEhDZ,QAAQ,CAACU,KAAK,EACXG,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACR,KAAI,GAAIQ,QAAQ,CAACT,IAAI;MAC5B,CAAC,EACAU,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD,CAAC,CAAC;IACN,CAAC;IACDE,gBAAgBA,CAACC,IAAI,EAAE;MACrB;MACAlB,UAAU,CAACkB,IAAI,CAACC,EAAE,EAAED,IAAI,EACrBN,IAAI,CAAC,MAAM;QACVQ,KAAK,CAAC,sBAAsB,CAAC;QAC7B,IAAI,CAACZ,UAAU,CAAC,CAAC;MACnB,CAAC,EACAM,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D,CAAC,CAAC;IACN,CAAC;IACDM,gBAAgBA,CAACC,MAAM,EAAE;MACvB;MACArB,UAAU,CAACqB,MAAM,EACdV,IAAI,CAAC,MAAM;QACVQ,KAAK,CAAC,kBAAkB,CAAC;QACzB,IAAI,CAACZ,UAAU,CAAC,CAAC;MACnB,CAAC,EACAM,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACN,CAAC;IACDQ,gBAAgBA,CAACD,MAAM,EAAEE,OAAO,EAAE;MAChC;MACAtB,UAAU,CAACoB,MAAM,EAAEE,OAAO,EACvBZ,IAAI,CAAC,MAAM;QACVQ,KAAK,CAAC,qBAAqB,CAAC;QAC5B,IAAI,CAACZ,UAAU,CAAC,CAAC;MACnB,CAAC,EACAM,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D,CAAC,CAAC;IACN;EACF,CAAC;EACDU,OAAOA,CAAA,EAAG;IACR,IAAI,CAACjB,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}