{"ast":null,"code":"import PostItem1 from './PostItem1.vue';\nimport { getPosts, addComment } from '../services/api'; // Importă funcția specifică\n\nexport default {\n  components: {\n    PostItem1\n  },\n  data() {\n    return {\n      posts: [],\n      newComment: \"\",\n      message: ''\n    };\n  },\n  methods: {\n    fetchPosts() {\n      const token = localStorage.getItem('jwtToken'); // Obține token-ul din localStorage\n\n      getPosts(token).then(response => {\n        this.posts = response.data;\n      }).catch(error => {\n        console.error('Eroare la preluarea postărilor:', error);\n      });\n    },\n    handleAddComment(postId, newComment) {\n      const token = localStorage.getItem('jwtToken');\n      console.log(\"Comentariu trimis:\", newComment);\n      const commentData = {\n        content: newComment\n      };\n      addComment(postId, commentData, token).then(response => {\n        console.log(\"Comentariu creat:\", response.data);\n        alert('Comentariu adăugat!');\n        this.fetchPosts();\n      }).catch(error => {\n        console.error('Eroare la adăugarea comentariului:', error);\n      });\n    }\n  },\n  mounted() {\n    this.fetchPosts();\n  }\n};","map":{"version":3,"names":["PostItem1","getPosts","addComment","components","data","posts","newComment","message","methods","fetchPosts","token","localStorage","getItem","then","response","catch","error","console","handleAddComment","postId","log","commentData","content","alert","mounted"],"sources":["C:\\Users\\Elena\\Desktop\\an4\\sem1\\SCD\\Proiect\\frontend\\src\\components\\PostList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Lista Postări</h1>\r\n    <div v-for=\"post in posts\" :key=\"post.id\">\r\n      <PostItem1\r\n        :post=\"post\"\r\n        @add-comment=\"handleAddComment\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PostItem1 from './PostItem1.vue';\r\nimport { getPosts, addComment } from '../services/api'; // Importă funcția specifică\r\n\r\n\r\nexport default {\r\n  components: {\r\n    PostItem1\r\n  },\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      newComment: \"\",\r\n      message: '',\r\n    };\r\n  },\r\n  methods: {\r\n  fetchPosts() {\r\n      const token = localStorage.getItem('jwtToken'); // Obține token-ul din localStorage\r\n\r\n      getPosts(token)\r\n        .then(response => {\r\n          this.posts = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Eroare la preluarea postărilor:', error);\r\n        });\r\n    },\r\n  handleAddComment(postId,newComment) {\r\n    const token = localStorage.getItem('jwtToken');\r\n        console.log(\"Comentariu trimis:\", newComment);\r\n        const commentData = {\r\n        content: newComment,\r\n      };\r\n      \r\n      addComment(postId, commentData, token)\r\n    .then(response => {\r\n      console.log(\"Comentariu creat:\", response.data);\r\n      alert('Comentariu adăugat!');\r\n      this.fetchPosts();\r\n    })\r\n    .catch(error => {\r\n      console.error('Eroare la adăugarea comentariului:', error);\r\n    });\r\n}\r\n    },\r\n  mounted() {\r\n    this.fetchPosts();\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Stiluri pentru a arăta postările și detaliile acestora */\r\n.post {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nh3 {\r\n  cursor: pointer;\r\n  color: #007BFF;\r\n}\r\n\r\nh3:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding-left: 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 10px;\r\n}\r\n\r\nsmall {\r\n  font-size: 0.9em;\r\n  color: gray;\r\n}\r\n\r\np {\r\n  font-size: 1.1em;\r\n}\r\n\r\nh4 {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AAaA,OAAOA,SAAQ,MAAO,iBAAiB;AACvC,SAASC,QAAQ,EAAEC,UAAS,QAAS,iBAAiB,EAAE;;AAGxD,eAAe;EACbC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACTC,UAAUA,CAAA,EAAG;MACT,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;;MAEhDX,QAAQ,CAACS,KAAK,EACXG,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACT,KAAI,GAAIS,QAAQ,CAACV,IAAI;MAC5B,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD,CAAC,CAAC;IACN,CAAC;IACHE,gBAAgBA,CAACC,MAAM,EAACb,UAAU,EAAE;MAClC,MAAMI,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAC1CK,OAAO,CAACG,GAAG,CAAC,oBAAoB,EAAEd,UAAU,CAAC;MAC7C,MAAMe,WAAU,GAAI;QACpBC,OAAO,EAAEhB;MACX,CAAC;MAEDJ,UAAU,CAACiB,MAAM,EAAEE,WAAW,EAAEX,KAAK,EACtCG,IAAI,CAACC,QAAO,IAAK;QAChBG,OAAO,CAACG,GAAG,CAAC,mBAAmB,EAAEN,QAAQ,CAACV,IAAI,CAAC;QAC/CmB,KAAK,CAAC,qBAAqB,CAAC;QAC5B,IAAI,CAACd,UAAU,CAAC,CAAC;MACnB,CAAC,EACAM,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D,CAAC,CAAC;IACN;EACI,CAAC;EACHQ,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}