{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post-item1\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleDetails && $options.toggleDetails(...args))\n  }, _toDisplayString($props.post.title), 1 /* TEXT */), $data.showDetails ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createCommentVNode(\" Afișare formular dacă este în modul de editare \"), _createElementVNode(\"p\", null, _toDisplayString($props.post.content), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Autor:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($props.post?.user?.name || 'Unknown Author'), 1 /* TEXT */)]), _createCommentVNode(\" Butoane pentru acțiuni \"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleCommentForm && $options.toggleCommentForm(...args))\n  }, \"Add Comment\"), _createCommentVNode(\" Formular de adăugare comentariu \"), $data.showCommentForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newComment = $event),\n    placeholder: \"Scrie un comentariu\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newComment]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.emitAddComment && $options.emitAddComment(...args))\n  }, \"Submit Comment\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Listă comentarii \"), $props.post.comments && $props.post.comments.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"h4\", null, \"Comments:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.post.comments, (comment, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"div\", null, [_createElementVNode(\"strong\", null, _toDisplayString(comment.user.name), 1 /* TEXT */), _createTextVNode(\": \" + _toDisplayString(comment.content), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","toggleDetails","$props","post","title","$data","showDetails","_hoisted_2","_createCommentVNode","_toDisplayString","content","_createTextVNode","user","name","toggleCommentForm","showCommentForm","_hoisted_3","$event","newComment","placeholder","emitAddComment","comments","length","_hoisted_4","_Fragment","_renderList","comment","index"],"sources":["C:\\Users\\Elena\\Desktop\\an4\\sem1\\SCD\\Proiect\\frontend\\src\\components\\PostItem1.vue"],"sourcesContent":["<template>\r\n    <div class=\"post-item1\">\r\n      <h2 @click=\"toggleDetails\">{{ post.title }}</h2>\r\n  \r\n      <div v-if=\"showDetails\">\r\n        <!-- Afișare formular dacă este în modul de editare -->\r\n          <p>{{ post.content }}</p>\r\n          <p><strong>Autor:</strong> {{ post?.user?.name || 'Unknown Author' }}</p>\r\n  \r\n          <!-- Butoane pentru acțiuni -->\r\n          <button @click=\"toggleCommentForm\">Add Comment</button>\r\n  \r\n        <!-- Formular de adăugare comentariu -->\r\n        <div v-if=\"showCommentForm\">\r\n          <textarea v-model=\"newComment\" placeholder=\"Scrie un comentariu\"></textarea>\r\n          <button @click=\"emitAddComment\">Submit Comment</button>\r\n        </div>\r\n  \r\n        <!-- Listă comentarii -->\r\n      <div v-if=\"post.comments && post.comments.length\">\r\n        <h4>Comments:</h4>\r\n        <ul>\r\n          <li v-for=\"(comment, index) in post.comments\" :key=\"index\">\r\n            <div>\r\n              <strong>{{ comment.user.name }}</strong>: {{ comment.content }}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    props: {\r\n      post: {\r\n        type: Object ,\r\n        required: true\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        showDetails: false,\r\n        showCommentForm: false,\r\n        newComment: ''\r\n      };\r\n    },\r\n    mounted() {\r\n    console.log('Post received in component:', this.post);\r\n  },\r\n    methods: {\r\n      toggleDetails() {\r\n        this.showDetails = !this.showDetails;\r\n      },\r\n      toggleCommentForm() {\r\n        this.showCommentForm = !this.showCommentForm;\r\n      },\r\n      emitAddComment() {\r\n    if (this.newComment.trim()) {\r\n      this.$emit('add-comment', this.post.id, this.newComment);\r\n      this.newComment = \"\"; // Resetează textarea\r\n    } else {\r\n      alert(\"Comentariul nu poate fi gol!\");\r\n    }\r\n  }\r\n}\r\n};\r\n  </script>\r\n  \r\n   <style scoped>\r\n    .post-item1 {\r\n      border: 1px solid #ccc;\r\n      padding: 10px;\r\n      margin: 10px 0;\r\n    }\r\n    h2 {\r\n      cursor: pointer;\r\n    }\r\n    textarea {\r\n      width: 100%;\r\n      margin-top: 10px;\r\n    }\r\n    /* Adaugă stiluri pentru formularul de editare */\r\n  textarea, input {\r\n    display: block;\r\n    margin: 10px 0;\r\n    width: 100%;\r\n    padding: 8px;\r\n    font-size: 1rem;\r\n  }\r\n  button {\r\n    margin-right: 10px;\r\n  }\r\n    </style>\r\n    "],"mappings":";;EACSA,KAAK,EAAC;AAAY;;EAD3BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CA6BM,OA7BNC,UA6BM,GA5BJC,mBAAA,CAAgD;IAA3CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;sBAAKG,MAAA,CAAAC,IAAI,CAACC,KAAK,kBAE7BC,KAAA,CAAAC,WAAW,I,cAAtBZ,mBAAA,CAyBM,OA7BZa,UAAA,GAKQC,mBAAA,oDAAuD,EACrDZ,mBAAA,CAAyB,WAAAa,gBAAA,CAAnBP,MAAA,CAAAC,IAAI,CAACO,OAAO,kBAClBd,mBAAA,CAAyE,Y,0BAAtEA,mBAAA,CAAuB,gBAAf,QAAM,sBAP3Be,gBAAA,CAOoC,GAAC,GAAAF,gBAAA,CAAGP,MAAA,CAAAC,IAAI,EAAES,IAAI,EAAEC,IAAI,qC,GAE9CL,mBAAA,4BAA+B,EAC/BZ,mBAAA,CAAuD;IAA9CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAc,iBAAA,IAAAd,QAAA,CAAAc,iBAAA,IAAAf,IAAA,CAAiB;KAAE,aAAW,GAEhDS,mBAAA,qCAAwC,EAC7BH,KAAA,CAAAU,eAAe,I,cAA1BrB,mBAAA,CAGM,OAhBdsB,UAAA,G,gBAcUpB,mBAAA,CAA4E;IAdtF,uBAAAE,MAAA,QAAAA,MAAA,MAAAmB,MAAA,IAc6BZ,KAAA,CAAAa,UAAU,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAxBd,KAAA,CAAAa,UAAU,E,GAC7BtB,mBAAA,CAAuD;IAA9CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAoB,cAAA,IAAApB,QAAA,CAAAoB,cAAA,IAAArB,IAAA,CAAc;KAAE,gBAAc,E,KAfxDS,mBAAA,gBAkBQA,mBAAA,sBAAyB,EAChBN,MAAA,CAAAC,IAAI,CAACkB,QAAQ,IAAInB,MAAA,CAAAC,IAAI,CAACkB,QAAQ,CAACC,MAAM,I,cAAhD5B,mBAAA,CASM,OA5BZ6B,UAAA,G,0BAoBQ3B,mBAAA,CAAkB,YAAd,WAAS,sBACbA,mBAAA,CAMK,c,kBALHF,mBAAA,CAIK8B,SAAA,QA1BfC,WAAA,CAsByCvB,MAAA,CAAAC,IAAI,CAACkB,QAAQ,EAtBtD,CAsBsBK,OAAO,EAAEC,KAAK;yBAA1BjC,mBAAA,CAIK;MAJ0CD,GAAG,EAAEkC;IAAK,IACvD/B,mBAAA,CAEM,cADJA,mBAAA,CAAwC,gBAAAa,gBAAA,CAA7BiB,OAAO,CAACd,IAAI,CAACC,IAAI,kBAxB1CF,gBAAA,CAwBsD,IAAE,GAAAF,gBAAA,CAAGiB,OAAO,CAAChB,OAAO,iB;wCAxB1EF,mBAAA,e,KAAAA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}